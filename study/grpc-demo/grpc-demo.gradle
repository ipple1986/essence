buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/repository/central' }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.10'
    }
}
apply plugin: "java"
apply plugin: 'com.google.protobuf'

def grpcVersion = '1.24.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url 'http://maven.aliyun.com/repository/central' }
    maven { url 'http://maven.aliyun.com/repository/jcenter'}
    maven { url 'http://maven.aliyun.com/repository/google'}
    maven { url 'http://maven.aliyun.com/repository/gradle-plugin'}
    maven { url 'http://maven.aliyun.com/repository/spring'}
    maven { url 'http://maven.aliyun.com/repository/spring-plugin'}
}

dependencies{
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile 'com.google.protobuf:protobuf-java:3.9.2'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.9.2'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }

    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}
jar {
    manifest {
        attributes "Main-Class": "demo.ProductInfoServer"
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
apply plugin: 'application'
startScripts.enabled = false